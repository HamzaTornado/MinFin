@model MinisitreFin.Models.compte_rendu

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_dashboardAdmin.cshtml";
}
<script>
    tinymce.init({
        selector: '#Sujet1,#Sujet2,#Autre',
        plugins: "wordcount"
    });
    function submitForm() {
        // Check if the user has entered less than 1000 characters
        if (getStats('Description').chars > 2500) {
            alert("Le Limite est 2500 Characters");
            return;
        }
        // Check if the user has entered less than 100 words
        //if (getStats('Objectifs_generaux').words < 100) {
        //    alert("You need to enter 100 words or more.");
        //    return;
        //}
        // Submit the form
        document.forms[0].submit();
    }
</script>
<h2>Modifier <i class="fa fa-edit"></i></h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <div class="form-group" hidden="hidden">
        @Html.LabelFor(model => model.ActivitesID, "ActivitesID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ActivitesID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ActivitesID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <Label class="control-label col-md-2">Titre</Label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titre_cr, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Titre_cr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <Label class="control-label col-md-2">Date Debut</Label>
        <div class="col-md-10">
            @Html.TextBox("Date_debut", Model.Date_debut, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @required = "required" })

            @Html.ValidationMessageFor(model => model.Date_debut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <Label class="control-label col-md-2">Date Fin</Label>
        <div class="col-md-10">
            @Html.TextBox("Date_fin", Model.Date_fin, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @required = "required" })
            @Html.ValidationMessageFor(model => model.Date_fin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <Label class="control-label col-md-2">Sujet 1</Label>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Sujet1, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.Sujet1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <Label class="control-label col-md-2">Sujet 2</Label>

        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Sujet2, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.Sujet2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <Label class="control-label col-md-2">Autre</Label>
        <div class="col-md-10">

            @Html.TextAreaFor(model => model.Autre, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.Autre, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.Statut)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Modifier" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Retour à la liste d'activites", "ActiviteCRS", "CompteRendu", new { idgroupe = ViewData["idgroupe"],idAct= ViewData["idActivite"] }, null)
</div>
