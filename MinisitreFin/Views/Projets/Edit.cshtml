@model MinisitreFin.ViewModels.ProjectsViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_dashboardAdmin.cshtml";
}

<script>
    tinymce.init({
        selector: '#Description,#Objectif_projet',
        plugins: "wordcount"
    });
    function submitForm() {
        // Check if the user has entered less than 1000 characters
        if (getStats('Objectifs_generaux').chars > 2500 || getStats('Obgectifs_specifiques').chars > 2500 || getStats('Description_court').chars > 2500 || getStats('Description_detaillee').chars > 2500) {
            alert("Le Limite est 2500 Characters");
            return;
        }

        // Submit the form
        document.forms[0].submit();
    }
</script>
<h2>Modifier <i class="fa fa-edit"></i></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Projet</h4>
        <hr />
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["Message"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group" hidden="hidden">
            <label class="control-label col-md-2"></label>
            <div class="col-md-10">
                @Html.DropDownList("ID_Initiative", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ID_Initiative, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Nom De Projet</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nom_projet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom_projet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Description</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Objectif de Projet</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Objectif_projet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Objectif_projet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Date Debut</label>
            <div class="col-md-10">
                @Html.TextBox("Date_debut", Model.Date_debut, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @required = "required" })
                @Html.ValidationMessageFor(model => model.Date_debut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Date Fin</label>
            <div class="col-md-10">
                @Html.TextBox("Date_fin", Model.Date_fin, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @required = "required" })

                @Html.ValidationMessageFor(model => model.Date_fin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Modifier" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>
